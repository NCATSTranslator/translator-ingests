# Text Mining KP KGX Pass-through Configuration
name: text_mining_kp

# Configuration for reading pre-existing KGX files
readers:
  # Nodes file reader
  - name: nodes
    format: jsonl
    files:
      # Update these paths to point to actual KGX files
      - data/text_mining_kp/nodes.jsonl
    # No delimiter needed for JSONL format
    
  # Edges file reader  
  - name: edges
    format: jsonl
    files:
      # Update these paths to point to actual KGX files
      - data/text_mining_kp/edges.jsonl

# Transform configuration
transform:
  # Python module containing the transformation logic
  code: src/translator_ingest/ingests/text_mining_kp/text_mining_kp.py
  
  # Optional: Set minimum confidence threshold for filtering
  # min_confidence_threshold: 0.5
  
  # Optional: Add any custom filters
  filters:
    # Example: Filter by knowledge level
    # - inclusion_criteria:
    #     knowledge_level:
    #       - statistical_association
    #       - literature_derived

# Writer configuration for KGX output
writer:
  format: kgx
  
  # Node properties to include in output
  node_properties:
    - id
    - category
    - name
    - description
    - synonym
    - xref
    - provided_by
    
  # Edge properties to include in output
  edge_properties:
    - id
    - subject
    - predicate
    - object
    - category
    - knowledge_level
    - agent_type
    - primary_knowledge_source
    - aggregator_knowledge_source
    - publications
    - confidence_score
    - qualifiers
    - has_evidence
    - has_count
    - has_total
    - has_quotient
    - has_percentage
    - subject_closure
    - object_closure
    
  # Optional: Output file naming
  # node_file: text_mining_kp_nodes_transformed.jsonl
  # edge_file: text_mining_kp_edges_transformed.jsonl